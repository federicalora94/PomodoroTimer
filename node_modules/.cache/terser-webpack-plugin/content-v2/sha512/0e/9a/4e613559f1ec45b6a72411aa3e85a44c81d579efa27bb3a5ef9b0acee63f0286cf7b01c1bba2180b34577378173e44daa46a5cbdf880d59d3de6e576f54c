{"map":"{\"version\":3,\"sources\":[\"/Users/federicalora/Desktop/PomodoroTimer/src/context/SettingsContext.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/components/ConfrimButton.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/components/Settings.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/components/PauseButton.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/components/PlayButton.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/components/SettingsButtton.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/components/Timer.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/App.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/reportWebVitals.js\",\"/Users/federicalora/Desktop/PomodoroTimer/src/index.js\"],\"names\":[\"SettingsContext\",\"react\",\"createContext\",\"ConfirmButton\",\"props\",\"react_default\",\"a\",\"createElement\",\"Object\",\"assign\",\"className\",\"xmlns\",\"viewBox\",\"fill\",\"fillRule\",\"d\",\"clipRule\",\"Settings\",\"settingsInfo\",\"useContext\",\"workMinutes\",\"prod\",\"thumbClassName\",\"trackClassName\",\"value\",\"onChange\",\"newValue\",\"setWorkMinutes\",\"min\",\"max\",\"breakMinutes\",\"setBreakMinutes\",\"ConfrimButton\",\"onClick\",\"setShowSettings\",\"PauseButton\",\"PlayButton\",\"index_es\",\"icon\",\"SettingsButton\",\"Timer\",\"_useState\",\"useState\",\"_useState2\",\"slicedToArray\",\"isPaused\",\"setIsPaused\",\"_useState3\",\"_useState4\",\"mode\",\"setMode\",\"_useState5\",\"_useState6\",\"secondsLeft\",\"setSecondsLeft\",\"_useState7\",\"_useState8\",\"count\",\"setCount\",\"secondsLeftRef\",\"useRef\",\"isPausedRef\",\"modeRef\",\"useEffect\",\"current\",\"interval\",\"setInterval\",\"nextMode\",\"nextSeconds\",\"switchMode\",\"totalSeconds\",\"percentage\",\"Math\",\"round\",\"minutes\",\"floor\",\"seconds\",\"SettingsButtton\",\"index_esm\",\"text\",\"styles\",\"buildStyles\",\"textColor\",\"pathColor\",\"trailColor\",\"strokeWidth\",\"components_PlayButton\",\"components_PauseButton\",\"App\",\"showSettings\",\"longBreakMinutes\",\"setLongBreakMinutes\",\"context_SettingsContext\",\"Provider\",\"components_Settings\",\"components_Timer\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"e\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\",\"src_App\"],\"mappings\":\"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\",\"sourcesContent\":[\"// here we are using context to store the timer values:\\n            // value\\n            // min\\n            // max \\n\\nimport react from \\\"react\\\";\\nconst SettingsContext = react.createContext({});\\nexport default SettingsContext;\",\"import React from 'react';\\n\\nfunction ConfirmButton(props) {\\n    return (\\n        <button {...props} className={'confirmButton'}>\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" className=\\\"h-5 w-5\\\" viewBox=\\\"0 0 20 20\\\" fill=\\\"currentColor\\\">\\n                <path fillRule=\\\"evenodd\\\" d=\\\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\\\" clipRule=\\\"evenodd\\\" />\\n            </svg>\\n            confirm\\n        </button>\\n    )\\n}\\n\\nexport default ConfirmButton;\",\"import React, { useContext } from \\\"react\\\";\\nimport ReactSlider from \\\"react-slider\\\";\\nimport SettingsContext from \\\"../context/SettingsContext\\\";\\nimport \\\"../slider.css\\\";\\nimport ConfirmButton from \\\"./ConfrimButton\\\";\\n\\nfunction Settings() {\\n  const settingsInfo = useContext(SettingsContext);\\n  return (\\n    <div className=\\\"settingsContainer\\\">\\n      {/* -------------------- work */}\\n      <label>Work: {settingsInfo.workMinutes}:00</label>\\n      <ReactSlider\\n        className=\\\"slider\\\"\\n        thumbClassName={\\\"thumb\\\"}\\n        trackClassName={\\\"track\\\"}\\n        value={settingsInfo.workMinutes}\\n        onChange={(newValue) => settingsInfo.setWorkMinutes(newValue)}\\n        min={1}\\n        max={120}\\n      />\\n\\n      {/* -------------------- break */}\\n\\n      <label>Break: {settingsInfo.breakMinutes}:00</label>\\n      <ReactSlider\\n        className=\\\"slider\\\"\\n        thumbClassName={\\\"thumb\\\"}\\n        trackClassName={\\\"track\\\"}\\n        value={settingsInfo.breakMinutes}\\n        onChange={(newValue) => settingsInfo.setBreakMinutes(newValue)}\\n        min={1}\\n        max={120}\\n      />\\n\\n      {/* -------------------- Long break */}\\n\\n      {/* <label>Long Break: {settingsInfo.breakMinutes}:00</label>\\n      <ReactSlider\\n        className=\\\"slider\\\"\\n        thumbClassName={\\\"thumb\\\"}\\n        trackClassName={\\\"track\\\"}\\n        value={settingsInfo.longBreakMinutes}\\n        onChange={(newValue) => settingsInfo.setLongBreakMinutes(newValue)}\\n        min={1}\\n        max={120}\\n      /> */}\\n\\n      {/* ---------confirm or go back----- */}\\n\\n      <ConfirmButton onClick={() => settingsInfo.setShowSettings(false)} />\\n    </div>\\n  );\\n}\\n\\nexport default Settings;\\n\",\"import React from 'react';\\n\\nfunction PauseButton(props) {\\n    return (\\n        <button{...props}>\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" className=\\\"h-5 w-5\\\" viewBox=\\\"0 0 20 20\\\" fill=\\\"currentColor\\\">\\n                <path fillRule=\\\"evenodd\\\" d=\\\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\\\" clipRule=\\\"evenodd\\\" />\\n            </svg>\\n        </button>\\n    );\\n}\\n\\nexport default PauseButton;\",\"import React from 'react'\\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\\n\\nfunction PlayButton(props) {\\n    return (\\n        <div>\\n            <FontAwesomeIcon icon=\\\"check-square\\\" />\\n        </div>\\n    );\\n}\\n\\nexport default PlayButton;\",\"import React from 'react';\\n\\n\\nfunction SettingsButton(props) {\\n    return (\\n        <button{...props}>\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" className=\\\"h-5 w-5\\\" viewBox=\\\"0 0 20 20\\\" fill=\\\"currentColor\\\">\\n                <path fillRule=\\\"evenodd\\\" d=\\\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\\\" clipRule=\\\"evenodd\\\" />\\n            </svg>\\n        </button>\\n    );\\n}\\n\\nexport default SettingsButton;\",\"import React from \\\"react\\\";\\nimport { useContext, useState, useEffect, useRef } from \\\"react\\\";\\nimport SettingsContext from \\\"../context/SettingsContext\\\";\\n\\n//----- CircularProgressbar -----\\n//documentation: https://www.npmjs.com/package/react-circular-progressbar\\nimport { CircularProgressbar, buildStyles } from \\\"react-circular-progressbar\\\";\\nimport \\\"react-circular-progressbar/dist/styles.css\\\";\\n\\n//----- Button components -----\\nimport PauseButton from \\\"./PauseButton\\\";\\nimport PlayButton from \\\"./PlayButton\\\";\\nimport SettingsButton from \\\"./SettingsButtton\\\";\\n\\nfunction Timer() {\\n  const settingsInfo = useContext(SettingsContext);\\n  const [isPaused, setIsPaused] = useState(true);\\n  const [mode, setMode] = useState(\\\"work\\\"); // work / break / null\\n  const [secondsLeft, setSecondsLeft] = useState(0);\\n  var [count, setCount] = useState(0);\\n\\n  // Why do I use refs? To not have the values re-rendered when they change.\\n  const secondsLeftRef = useRef(secondsLeft);\\n  const isPausedRef = useRef(isPaused);\\n  const modeRef = useRef(mode);\\n\\n  function tick() {\\n    secondsLeftRef.current = secondsLeftRef.current - 1;\\n    setSecondsLeft(secondsLeftRef.current);\\n  }\\n\\n  useEffect(() => {\\n    // function to change modes\\n    function switchMode() {\\n      const nextMode = modeRef.current === \\\"work\\\" ? \\\"break\\\" : \\\"work\\\";\\n      const nextSeconds =\\n        (nextMode === \\\"work\\\"\\n          ? settingsInfo.workMinutes\\n          : settingsInfo.breakMinutes) * 60;\\n      setMode(nextMode);\\n      modeRef.current = nextMode;\\n      setSecondsLeft(nextSeconds);\\n      secondsLeftRef.current = nextSeconds;\\n    }\\n    secondsLeftRef.current = settingsInfo.workMinutes * 60;\\n    setSecondsLeft(secondsLeftRef.current);\\n\\n    const interval = setInterval(() => {\\n      if (isPausedRef.current) {\\n        return; //nothing\\n      }\\n      if (secondsLeftRef.current === 0) {\\n        // when timer goes to 0, change mode calling the switchMode function & update count variable\\n        count = count + 1;\\n        return switchMode() & setCount(count);\\n      }\\n      tick();\\n      return interval;\\n    }, 100);\\n  }, [settingsInfo]);\\n\\n  //--------------- timer mechanism -----------\\n\\n  // PERCENTAGE\\n  const totalSeconds =\\n    mode === \\\"work\\\"\\n      ? settingsInfo.workMinutes * 60\\n      : settingsInfo.breakMinutes * 60;\\n  const percentage = Math.round((secondsLeft / totalSeconds) * 100);\\n\\n  // MINUTES\\n  const minutes = Math.floor(secondsLeft / 60);\\n  let seconds = secondsLeft % 60;\\n  if (seconds < 10) seconds = \\\"0\\\" + seconds;\\n\\n  return (\\n    <div className=\\\"timerContainer\\\">\\n      {/* <div className=\\\"modeSets\\\" style={{ textAlign: \\\"left\\\" }}>\\n        <h1>Time to:{mode}</h1>\\n        <h2> you have done:{count} </h2>\\n      </div> */}\\n\\n      {/* ---- Settings button component ---- */}\\n      <div className=\\\"settingsButtonContainer\\\">\\n        <SettingsButton onClick={() => settingsInfo.setShowSettings(true)} />\\n      </div>\\n\\n      {/* ---- Progressbar ---- */}\\n\\n      <CircularProgressbar\\n        value={percentage}\\n        text={minutes + \\\":\\\" + seconds}\\n        styles={buildStyles({\\n          textColor: \\\"lightblue\\\",\\n          pathColor: mode === \\\"work\\\" ? \\\"lightBlue\\\" : \\\"lightGreen\\\",\\n          trailColor: \\\"lightgray\\\",\\n          // strokeLinecap: 'butt'\\n          strokeWidth: 20,\\n        })}\\n      />\\n\\n      {/* ---- Play-Pause button component ---- */}\\n      <div className=\\\"playPauseButtonContainer\\\">\\n        {isPaused ? (\\n          <PlayButton\\n            onClick={() => {\\n              setIsPaused(false);\\n              isPausedRef.current = false;\\n            }}\\n          />\\n        ) : (\\n          <PauseButton\\n            onClick={() => {\\n              setIsPaused(true);\\n              isPausedRef.current = true;\\n            }}\\n          />\\n        )}\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Timer;\\n\",\"import React from 'react';\\nimport './App.css';\\n\\nimport Settings from './components/Settings';\\nimport Timer from './components/Timer';\\nimport { useState } from \\\"react\\\";\\nimport SettingsContext from './context/SettingsContext';\\n\\nfunction App() {\\n\\n  // --------- State variables ---------\\n  const [showSettings, setShowSettings] = useState(false);\\n  const [workMinutes, setWorkMinutes] = useState(25);\\n  const [breakMinutes, setBreakMinutes] = useState(5);\\n  const [longBreakMinutes, setLongBreakMinutes] = useState(15);\\n\\n  return (\\n    <main>\\n      {/*----- using context -----*/}\\n      <SettingsContext.Provider value={{\\n        workMinutes,\\n        breakMinutes,\\n        setWorkMinutes,\\n        setBreakMinutes,\\n        showSettings,\\n        setShowSettings,\\n        longBreakMinutes,\\n        setLongBreakMinutes\\n      }} >\\n      \\n      \\n      {/* Settings & Timer components */}\\n      {/* if showSettings is true show the Settings, otherwise, show Timer */}\\n      {showSettings ? <Settings /> : <Timer />}\\n      \\n      </SettingsContext.Provider>\\n\\n\\n    </main>\\n  );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,n){},19:function(e,t,n){},23:function(e,t,n){},29:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),c=n(6),l=n.n(c),u=(n(17),n(2)),o=(n(19),n(4)),s=r.a.createContext({});n(23);var i=function(e){return r.a.createElement(\"button\",Object.assign({},e,{className:\"confirmButton\"}),r.a.createElement(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\"},r.a.createElement(\"path\",{fillRule:\"evenodd\",d:\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\",clipRule:\"evenodd\"})),\"confirm\")};var m=function(){var e=Object(a.useContext)(s);return r.a.createElement(\"div\",{className:\"settingsContainer\"},r.a.createElement(\"label\",null,\"Work: \",e.workMinutes,\":00\"),r.a.createElement(o.a,{className:\"slider\",thumbClassName:\"thumb\",trackClassName:\"track\",value:e.workMinutes,onChange:function(t){return e.setWorkMinutes(t)},min:1,max:120}),r.a.createElement(\"label\",null,\"Break: \",e.breakMinutes,\":00\"),r.a.createElement(o.a,{className:\"slider\",thumbClassName:\"thumb\",trackClassName:\"track\",value:e.breakMinutes,onChange:function(t){return e.setBreakMinutes(t)},min:1,max:120}),r.a.createElement(i,{onClick:function(){return e.setShowSettings(!1)}}))},b=n(3);n(25);var v=function(e){return r.a.createElement(\"button\",e,r.a.createElement(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\"},r.a.createElement(\"path\",{fillRule:\"evenodd\",d:\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z\",clipRule:\"evenodd\"})))},w=n(7);var f=function(e){return r.a.createElement(\"div\",null,r.a.createElement(w.a,{icon:\"check-square\"}))};var k=function(e){return r.a.createElement(\"button\",e,r.a.createElement(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\"},r.a.createElement(\"path\",{fillRule:\"evenodd\",d:\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\",clipRule:\"evenodd\"})))};var d=function(){var e=Object(a.useContext)(s),t=Object(a.useState)(!0),n=Object(u.a)(t,2),c=n[0],l=n[1],o=Object(a.useState)(\"work\"),i=Object(u.a)(o,2),m=i[0],w=i[1],d=Object(a.useState)(0),E=Object(u.a)(d,2),g=E[0],h=E[1],C=Object(a.useState)(0),M=Object(u.a)(C,2),j=M[0],O=M[1],p=Object(a.useRef)(g),S=Object(a.useRef)(c),x=Object(a.useRef)(m);Object(a.useEffect)(function(){p.current=60*e.workMinutes,h(p.current);var t=setInterval(function(){if(!S.current)return 0===p.current?(j+=1,function(){var t=\"work\"===x.current?\"break\":\"work\",n=60*(\"work\"===t?e.workMinutes:e.breakMinutes);w(t),x.current=t,h(n),p.current=n}()&O(j)):(p.current=p.current-1,h(p.current),t)},100)},[e]);var B=\"work\"===m?60*e.workMinutes:60*e.breakMinutes,N=Math.round(g/B*100),R=Math.floor(g/60),z=g%60;return z<10&&(z=\"0\"+z),r.a.createElement(\"div\",{className:\"timerContainer\"},r.a.createElement(\"div\",{className:\"settingsButtonContainer\"},r.a.createElement(k,{onClick:function(){return e.setShowSettings(!0)}})),r.a.createElement(b.a,{value:N,text:R+\":\"+z,styles:Object(b.b)({textColor:\"lightblue\",pathColor:\"work\"===m?\"lightBlue\":\"lightGreen\",trailColor:\"lightgray\",strokeWidth:20})}),r.a.createElement(\"div\",{className:\"playPauseButtonContainer\"},c?r.a.createElement(f,{onClick:function(){l(!1),S.current=!1}}):r.a.createElement(v,{onClick:function(){l(!0),S.current=!0}})))};var E=function(){var e=Object(a.useState)(!1),t=Object(u.a)(e,2),n=t[0],c=t[1],l=Object(a.useState)(25),o=Object(u.a)(l,2),i=o[0],b=o[1],v=Object(a.useState)(5),w=Object(u.a)(v,2),f=w[0],k=w[1],E=Object(a.useState)(15),g=Object(u.a)(E,2),h=g[0],C=g[1];return r.a.createElement(\"main\",null,r.a.createElement(s.Provider,{value:{workMinutes:i,breakMinutes:f,setWorkMinutes:b,setBreakMinutes:k,showSettings:n,setShowSettings:c,longBreakMinutes:h,setLongBreakMinutes:C}},n?r.a.createElement(m,null):r.a.createElement(d,null)))},g=function(e){e&&e instanceof Function&&n.e(1).then(n.bind(null,30)).then(function(t){var n=t.getCLS,a=t.getFID,r=t.getFCP,c=t.getLCP,l=t.getTTFB;n(e),a(e),r(e),c(e),l(e)})};l.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(E,null))),g()},8:function(e,t,n){e.exports=n(29)}},[[8,3,2]]]);","extractedComments":[]}