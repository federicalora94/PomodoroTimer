{"ast":null,"code":"import _slicedToArray from \"/Users/federicalora/Desktop/pomodoro-timer-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/federicalora/Desktop/pomodoro-timer-2/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Settings from './components/Settings';\nimport Timer from './components/Timer';\nimport { useState } from \"react\";\n\nfunction App() {\n  // State variables -------------------------------------\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showSettings = _useState2[0],\n      setShowSettings = _useState2[1]; // const [workMinutes, setWorkMinutes] = useState(45);\n  // const [breakMinutes, setBreakMinutes] = useState(15);\n\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, showSettings ? /*#__PURE__*/React.createElement(Settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(Timer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","Settings","Timer","useState","App","showSettings","setShowSettings"],"sources":["/Users/federicalora/Desktop/pomodoro-timer-2/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Settings from './components/Settings';\nimport Timer from './components/Timer';\nimport { useState } from \"react\";\n\nfunction App() {\n\n  // State variables -------------------------------------\n  const [showSettings, setShowSettings] = useState(true);\n  // const [workMinutes, setWorkMinutes] = useState(45);\n  // const [breakMinutes, setBreakMinutes] = useState(15);\n\n  return (\n    <main>\n      {/*----- using context */}\n      {/*----- using context */}\n\n      {/* Settings & Timer components */}\n      {/* if showSettings is true show the settings, otherwise, show timer */}\n      {showSettings ? <Settings /> : <Timer />}\n\n\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,GAAT,GAAe;EAEb;EAFa,gBAG2BD,QAAQ,CAAC,IAAD,CAHnC;EAAA;EAAA,IAGNE,YAHM;EAAA,IAGQC,eAHR,kBAIb;EACA;;;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAMGD,YAAY,gBAAG,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAH,gBAAkB,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANjC,CADF;AAYD;;AAED,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}