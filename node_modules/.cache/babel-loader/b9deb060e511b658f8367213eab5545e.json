{"ast":null,"code":"var _jsxFileName = \"/Users/federicalora/Desktop/pomodoro-timer-2/src/components/Settings.js\";\nimport React, { useContext } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport SettingsContext from \"../context/SettingsContext\";\nimport \"../slider.css\";\nimport ConfirmButton from \"./ConfrimButton\";\n\nfunction Settings() {\n  var settingsInfo = useContext(SettingsContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Work: \", settingsInfo.workMinutes, \":00\"), /*#__PURE__*/React.createElement(ReactSlider, {\n    className: \"slider\",\n    thumbClassName: \"thumb\",\n    trackClassName: \"track\",\n    value: settingsInfo.workMinutes,\n    onChange: function onChange(newValue) {\n      return settingsInfo.setWorkMinutes(newValue);\n    },\n    min: 1,\n    max: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Break: \", settingsInfo.breakMinutes, \":00\"), /*#__PURE__*/React.createElement(ReactSlider, {\n    className: \"slider\",\n    thumbClassName: \"thumb\",\n    trackClassName: \"track\",\n    value: settingsInfo.breakMinutes,\n    onChange: function onChange(newValue) {\n      return settingsInfo.setBreakMinutes(newValue);\n    },\n    min: 1,\n    max: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmButton, {\n    onClick: function onClick() {\n      return settingsInfo.setShowSettings(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Settings;","map":{"version":3,"names":["React","useContext","ReactSlider","SettingsContext","ConfirmButton","Settings","settingsInfo","textAlign","workMinutes","newValue","setWorkMinutes","breakMinutes","setBreakMinutes","setShowSettings"],"sources":["/Users/federicalora/Desktop/pomodoro-timer-2/src/components/Settings.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport SettingsContext from \"../context/SettingsContext\";\nimport \"../slider.css\";\nimport ConfirmButton from \"./ConfrimButton\";\n\nfunction Settings() {\n  const settingsInfo = useContext(SettingsContext);\n  return (\n    <div style={{ textAlign: \"left\" }}>\n      {/* -------------------- work */}\n      <label>Work: {settingsInfo.workMinutes}:00</label>\n      <ReactSlider\n        className=\"slider\"\n        thumbClassName={\"thumb\"}\n        trackClassName={\"track\"}\n        value={settingsInfo.workMinutes}\n        onChange={(newValue) => settingsInfo.setWorkMinutes(newValue)}\n        min={1}\n        max={120}\n      />\n\n      {/* -------------------- break */}\n\n      <label>Break: {settingsInfo.breakMinutes}:00</label>\n      <ReactSlider\n        className=\"slider\"\n        thumbClassName={\"thumb\"}\n        trackClassName={\"track\"}\n        value={settingsInfo.breakMinutes}\n        onChange={(newValue) => settingsInfo.setBreakMinutes(newValue)}\n        min={1}\n        max={120}\n      />\n\n      {/* -------------------- Long break */}\n\n      {/* <label>Long Break: {settingsInfo.breakMinutes}:00</label>\n      <ReactSlider\n        className=\"slider\"\n        thumbClassName={\"thumb\"}\n        trackClassName={\"track\"}\n        value={settingsInfo.longBreakMinutes}\n        onChange={(newValue) => settingsInfo.setLongBreakMinutes(newValue)}\n        min={1}\n        max={120}\n      /> */}\n\n      {/* ---------confirm or go back----- */}\n\n      <ConfirmButton onClick={() => settingsInfo.setShowSettings(false)} />\n    </div>\n  );\n}\n\nexport default Settings;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAO,eAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;EAClB,IAAMC,YAAY,GAAGL,UAAU,CAACE,eAAD,CAA/B;EACA,oBACE;IAAK,KAAK,EAAE;MAAEI,SAAS,EAAE;IAAb,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAAcD,YAAY,CAACE,WAA3B,QAFF,eAGE,oBAAC,WAAD;IACE,SAAS,EAAC,QADZ;IAEE,cAAc,EAAE,OAFlB;IAGE,cAAc,EAAE,OAHlB;IAIE,KAAK,EAAEF,YAAY,CAACE,WAJtB;IAKE,QAAQ,EAAE,kBAACC,QAAD;MAAA,OAAcH,YAAY,CAACI,cAAb,CAA4BD,QAA5B,CAAd;IAAA,CALZ;IAME,GAAG,EAAE,CANP;IAOE,GAAG,EAAE,GAPP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,eAeE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAAeH,YAAY,CAACK,YAA5B,QAfF,eAgBE,oBAAC,WAAD;IACE,SAAS,EAAC,QADZ;IAEE,cAAc,EAAE,OAFlB;IAGE,cAAc,EAAE,OAHlB;IAIE,KAAK,EAAEL,YAAY,CAACK,YAJtB;IAKE,QAAQ,EAAE,kBAACF,QAAD;MAAA,OAAcH,YAAY,CAACM,eAAb,CAA6BH,QAA7B,CAAd;IAAA,CALZ;IAME,GAAG,EAAE,CANP;IAOE,GAAG,EAAE,GAPP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAhBF,eAyCE,oBAAC,aAAD;IAAe,OAAO,EAAE;MAAA,OAAMH,YAAY,CAACO,eAAb,CAA6B,KAA7B,CAAN;IAAA,CAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAzCF,CADF;AA6CD;;AAED,eAAeR,QAAf"},"metadata":{},"sourceType":"module"}