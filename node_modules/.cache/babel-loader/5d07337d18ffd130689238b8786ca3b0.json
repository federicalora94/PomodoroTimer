{"ast":null,"code":"var _jsxFileName = \"/Users/federicalora/Desktop/PomodoroTimer/src/components/Settings.js\";\nimport React, { useContext } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport SettingsContext from \"../context/SettingsContext\";\nimport ConfirmButton from \"./ConfrimButton\";\n\nfunction Settings() {\n  var settingsInfo = useContext(SettingsContext);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settingsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Work time: \", settingsInfo.workMinutes, \":00\"), /*#__PURE__*/React.createElement(ReactSlider, {\n    className: \"slider\",\n    thumbClassName: \"thumb\",\n    trackClassName: \"track\",\n    value: settingsInfo.workMinutes,\n    onChange: function onChange(newValue) {\n      return settingsInfo.setWorkMinutes(newValue);\n    },\n    min: 1,\n    max: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Break time: \", settingsInfo.breakMinutes, \":00\"), /*#__PURE__*/React.createElement(ReactSlider, {\n    className: \"slider sliderBreak\",\n    thumbClassName: \"thumb\",\n    trackClassName: \"track\",\n    value: settingsInfo.breakMinutes,\n    onChange: function onChange(newValue) {\n      return settingsInfo.setBreakMinutes(newValue);\n    },\n    min: 1,\n    max: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confir\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmButton, {\n    onClick: function onClick() {\n      return settingsInfo.setShowSettings(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default Settings;","map":{"version":3,"names":["React","useContext","ReactSlider","SettingsContext","ConfirmButton","Settings","settingsInfo","workMinutes","newValue","setWorkMinutes","breakMinutes","setBreakMinutes","setShowSettings"],"sources":["/Users/federicalora/Desktop/PomodoroTimer/src/components/Settings.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport SettingsContext from \"../context/SettingsContext\";\nimport ConfirmButton from \"./ConfrimButton\";\n\nfunction Settings() {\n  const settingsInfo = useContext(SettingsContext);\n  return (\n    <>\n      <div className=\"settingsContainer\">\n        {/* -------------------- work ---------------------------*/}\n        <label>Work time: {settingsInfo.workMinutes}:00</label>\n        <ReactSlider\n          className=\"slider\"\n          thumbClassName={\"thumb\"}\n          trackClassName={\"track\"}\n          value={settingsInfo.workMinutes}\n          onChange={(newValue) => settingsInfo.setWorkMinutes(newValue)}\n          min={1}\n          max={120}\n        />\n\n        {/* -------------------- break ---------------------------*/}\n\n        <label>Break time: {settingsInfo.breakMinutes}:00</label>\n        <ReactSlider\n          className=\"slider sliderBreak\"\n          thumbClassName={\"thumb\"}\n          trackClassName={\"track\"}\n          value={settingsInfo.breakMinutes}\n          onChange={(newValue) => settingsInfo.setBreakMinutes(newValue)}\n          min={1}\n          max={120}\n        />\n\n        {/* -------------------- confirm button ---------------------------*/}\n        <div className=\"confir\">\n        <ConfirmButton onClick={() => settingsInfo.setShowSettings(false)} />\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default Settings;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;EAClB,IAAMC,YAAY,GAAGL,UAAU,CAACE,eAAD,CAA/B;EACA,oBACE,uDACE;IAAK,SAAS,EAAC,mBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAmBG,YAAY,CAACC,WAAhC,QAFF,eAGE,oBAAC,WAAD;IACE,SAAS,EAAC,QADZ;IAEE,cAAc,EAAE,OAFlB;IAGE,cAAc,EAAE,OAHlB;IAIE,KAAK,EAAED,YAAY,CAACC,WAJtB;IAKE,QAAQ,EAAE,kBAACC,QAAD;MAAA,OAAcF,YAAY,CAACG,cAAb,CAA4BD,QAA5B,CAAd;IAAA,CALZ;IAME,GAAG,EAAE,CANP;IAOE,GAAG,EAAE,GAPP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,eAeE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAoBF,YAAY,CAACI,YAAjC,QAfF,eAgBE,oBAAC,WAAD;IACE,SAAS,EAAC,oBADZ;IAEE,cAAc,EAAE,OAFlB;IAGE,cAAc,EAAE,OAHlB;IAIE,KAAK,EAAEJ,YAAY,CAACI,YAJtB;IAKE,QAAQ,EAAE,kBAACF,QAAD;MAAA,OAAcF,YAAY,CAACK,eAAb,CAA6BH,QAA7B,CAAd;IAAA,CALZ;IAME,GAAG,EAAE,CANP;IAOE,GAAG,EAAE,GAPP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAhBF,eA2BE;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,aAAD;IAAe,OAAO,EAAE;MAAA,OAAMF,YAAY,CAACM,eAAb,CAA6B,KAA7B,CAAN;IAAA,CAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADA,CA3BF,CADF,CADF;AAoCD;;AAED,eAAeP,QAAf"},"metadata":{},"sourceType":"module"}